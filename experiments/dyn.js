/* Generated by the Nim Compiler v1.5.1 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
function makeNimstrLit(c_2685062) {
      var ln = c_2685062.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_2685062.charCodeAt(i);
  }
  return result;
  

  
}
function toJSStr(s_2685096) {
                    var Tmp5;
            var Tmp7;

  var result_2685097 = null;

    var res_2685170 = newSeq_2685128((s_2685096).length);
    var i_2685172 = 0;
    var j_2685174 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_2685172 < (s_2685096).length)) break L2;
          var c_2685175 = s_2685096[i_2685172];
          if ((c_2685175 < 128)) {
          res_2685170[j_2685174] = String.fromCharCode(c_2685175);
          i_2685172 += 1;
          }
          else {
            var helper_2685198 = newSeq_2685128(0);
            L3: do {
                L4: while (true) {
                if (!true) break L4;
                  var code_2685199 = c_2685175.toString(16);
                  if (((code_2685199).length == 1)) {
                  helper_2685198.push("%0");;
                  }
                  else {
                  helper_2685198.push("%");;
                  }
                  
                  helper_2685198.push(code_2685199);;
                  i_2685172 += 1;
                    if (((s_2685096).length <= i_2685172)) Tmp5 = true; else {                      Tmp5 = (s_2685096[i_2685172] < 128);                    }                  if (Tmp5) {
                  break L3;
                  }
                  
                  c_2685175 = s_2685096[i_2685172];
                }
            } while(false);
++excHandler;
            Tmp7 = framePtr;
            try {
            res_2685170[j_2685174] = decodeURIComponent(helper_2685198.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp7;
            res_2685170[j_2685174] = helper_2685198.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp7;
            }
          }
          
          j_2685174 += 1;
        }
    } while(false);
    if (res_2685170.length < j_2685174) { for (var i=res_2685170.length;i<j_2685174;++i) res_2685170.push(null); }
               else { res_2685170.length = j_2685174; };
    result_2685097 = res_2685170.join("");

  return result_2685097;

}
function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
var globalRaiseHook_2587018 = [null];
var localRaiseHook_2587023 = [null];
var outOfMemHook_2587026 = [null];
var unhandledExceptionHook_2587031 = [null];
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var F={procname:"module dyn",prev:framePtr,filename:"d:\\QQPCmgr\\Desktop\\karax\\experiments\\dyn.nim",line:0};
framePtr = F;
framePtr = F.prev;
var F={procname:"module dyn",prev:framePtr,filename:"d:\\QQPCmgr\\Desktop\\karax\\experiments\\dyn.nim",line:0};
framePtr = F;
framePtr = F.prev;
function newSeq_2685128(len_2685131) {
  var result_2685133 = [];

  var F={procname:"newSeq.newSeq",prev:framePtr,filename:"C:\\Users\\blue\\.choosenim\\toolchains\\nim-#devel\\lib\\system.nim",line:0};
  framePtr = F;
    F.line = 656;
    result_2685133 = new Array(len_2685131); for (var i=0;i<len_2685131;++i) {result_2685133[i]=null;}  framePtr = F.prev;

  return result_2685133;

}
function dynmain_3082007() {
  var F={procname:"dyn.dynmain",prev:framePtr,filename:"d:\\QQPCmgr\\Desktop\\karax\\experiments\\dyn.nim",line:0};
  framePtr = F;
    F.line = 8;
    rawEcho(makeNimstrLit("dynamically loaded"));
  framePtr = F.prev;

  
}
var F={procname:"module dyn",prev:framePtr,filename:"d:\\QQPCmgr\\Desktop\\karax\\experiments\\dyn.nim",line:0};
framePtr = F;
F.line = 13;
plugins.push({Field0: makeNimstrLit("dyn"), Field1: dynmain_3082007});;
framePtr = F.prev;
var F={procname:"module dyn",prev:framePtr,filename:"d:\\QQPCmgr\\Desktop\\karax\\experiments\\dyn.nim",line:0};
framePtr = F;
framePtr = F.prev;
var F={procname:"module dyn",prev:framePtr,filename:"d:\\QQPCmgr\\Desktop\\karax\\experiments\\dyn.nim",line:0};
framePtr = F;
framePtr = F.prev;
